---
title: "Lab 5: Murder in SQL City"
author: "Gabriela Tena!"
format: 
  html:  
    embed-resources: true
    code-tools: true
    toc: true
editor: source
execute: 
  echo: true
warning: false
message: false
theme: spacelab
---

For this lab, you will be joining and filtering related datasets to solve a murder mystery!

## Instructions

Northwestern University's Knight Lab wanted to help sharpen users' database skills, so they created a murder mystery. Can you solve this crime in SQL City??

The relational data you will be working with contains tables with different pieces of information pertinent to the crime - people, social media check-ins, driver's licenses, crime scene reports, police interviews, and more!

![Database schema](https://mystery.knightlab.com/schema.png)

Solve the murder mystery, showing **all of your work in this document**. Your document and code must be well organized, easy to follow, and reproducible.

+ Use headers and written descriptions to indicate what you are doing.
+ Use `dplyr` verbs and `join` functions rather than just looking through the tables manually.
+ Use good code formatting practices.
+ Comment your code.
+ Cite any external sources you use to solve the mystery.

### Tips 

You may find the `pull()` function handy for displaying each clue as you go along.


## Access the Data

This code chunk will read in all of the tables of data for you. Don't modify or remove this!

```{r}
#| message: false
#| warning: false
#| label: read-in-data

library(tidyverse)

# If purrr is not detected, install the package
if (!"purrr" %in% installed.packages()) install.packages("purrr")

source("https://raw.githubusercontent.com/atheobold/groupworthy-data-science/main/labs/instructions/lab-5-setup.R")
```

## Solve the Crime

### Crime Scene Report

Detective Wickham reaches out to you...

> A crime has taken place and I need your help! There was a murder in SQL City sometime on January 15, 2018. Could you retrieve the crime scene report from the police departmentâ€™s database and follow the clues to find the person responsible for the murder?!

```{r}
#| label: inspecting-crime-scene-report
#finding the case from the police report
crime_scene_report |>
  filter(type == "murder",
         city == "SQL City",
         date == '20180115') |>
  pull(description)


  
```


**Follow the evidence to the person responsible for the murder, building a report as you go.**
Hint: Make sure you check for interviews with any suspects!


## Witnesses
```{r}
#| label: finding-witnesses
#identifying who the witnesses where

person |>
  filter(str_detect(address_street_name, 
                    "Northwestern Dr") &
           address_number == max(address_number)) |> 
  bind_rows(person |> 
      filter(str_detect(name, 
                        "Annabel") &
               str_detect(address_street_name, 
                          "Franklin Ave"))) |>
  pull(id)

```


## Witness Information
```{r}
#| label: interview-information
#looking for witness statements
interview |>
  filter(person_id %in% c("14887", 
                          "16371")) |>
  pull(transcript)


```

## Finding Suspect through Witness Statements
```{r}
#| label: analyzing-statements
#analyzing the information given in interview

get_fit_now_check_in |>
  filter(check_in_date == "20180109") |>
  right_join(
    get_fit_now_member |>
      filter(
        str_starts(id, "48Z") &
             membership_status == "gold"),
    by = join_by(membership_id == id)) |>
  left_join(person,
    by = join_by(person_id == id)) |>
  inner_join(
    drivers_license |>
      filter(
        str_detect(plate_number, "H42W")),
    by = join_by(license_id == id)) |>
  select(name.x, 
         name.y, 
         person_id)


```

#https://chatgpt.com/share/671f25e2-b958-800c-879c-e4366f9cef63

## Suspects Statement
```{r}
#| label: investigating-suspect
#looking for suspect's interview
interview |>
  filter(person_id == "67318") |>
  pull(transcript)

```

## Finding the Lady's Identity
```{r}
#| label: analyzing-suspect-statement
#looking for suspect's interview
facebook_event_checkin |>
  mutate(date = ymd(date)) |>
  filter(
    str_detect(
      event_name, "SQL Symphony"),
         date %within% interval(ymd("20171201"), 
                                ymd("20171231"))) |>
  group_by(person_id) |>
  filter(n() >= 3) |>
  ungroup() |>
  select(person_id) |>
  distinct() |>
  left_join(person,
            by = join_by(person_id == id)) |>
  inner_join(drivers_license,
             by = join_by(license_id == id)) |>
  pull(name)
         
```



## And the final suspect is...

Miranda Priestly!

*Put the name of the person responsible for the murder here:*
